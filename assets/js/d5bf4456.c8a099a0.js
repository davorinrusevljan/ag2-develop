"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[50059],{7014:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=i(74848),a=i(28453);const s={title:"Exploring Pragmatic Patterns in Agentic Systems - Nov 04, 2024"},r=void 0,o={permalink:"/ag2/talks/2024/11/04/index",source:"@site/talks/2024-11-04/index.mdx",title:"Exploring Pragmatic Patterns in Agentic Systems - Nov 04, 2024",description:"Speakers: llan Bigio",date:"2024-11-04T00:00:00.000Z",formattedDate:"November 4, 2024",tags:[],readingTime:.51,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Exploring Pragmatic Patterns in Agentic Systems - Nov 04, 2024"},unlisted:!1,prevItem:{title:"Multi-AI Agents for Chip Design with Distilled Knowledge Debugging Graph, Task Graph Solving, and Multi-Modal Capabilities - Nov 11, 2024",permalink:"/ag2/talks/2024/11/11/index"},nextItem:{title:"Agent-Model Orchestration in Multi-Agent Applications - Oct 15, 2024",permalink:"/ag2/talks/2024/10/15/index"}},l={authorsImageUrls:[]},c=[{value:"Speakers: llan Bigio",id:"speakers-llan-bigio",level:3},{value:"Biography of the speakers:",id:"biography-of-the-speakers",level:3},{value:"Abstract:",id:"abstract",level:3}];function p(e){const t={h3:"h3",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"speakers-llan-bigio",children:"Speakers: llan Bigio"}),"\n",(0,n.jsx)(t.h3,{id:"biography-of-the-speakers",children:"Biography of the speakers:"}),"\n",(0,n.jsx)(t.p,{children:"Ilan Bigio is an engineer on the Developer Experience team at OpenAI."}),"\n",(0,n.jsx)(t.h3,{id:"abstract",children:"Abstract:"}),"\n",(0,n.jsx)(t.p,{children:"As autonomous AI systems grow increasingly sophisticated, everyone is working to identify optimal architectural patterns. Different design approaches serve distinct priorities \u2013 from maximizing agent autonomy to ensuring scalability, maintaining simplicity, or guaranteeing long-term stability. This talk attempts to present a practical taxonomy of these patterns, examining key tradeoffs such as operational range versus reliability, and acceptable failure thresholds. Drawing from our experience developing Swarm, we'll share insights into creating systems that balance reliability, simplicity, and ergonomic design principles.\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b"})]})}function g(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(96540);const a={},s=n.createContext(a);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);