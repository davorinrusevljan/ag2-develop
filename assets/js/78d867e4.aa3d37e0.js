"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6644],{38874:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=o(85893),a=o(11151);const r={title:"Introducing FastAgency - the fastest way to bring AutoGen workflows to production - Nov 12, 2024"},i=void 0,s={permalink:"/ag2/talks/2024/11/12/index",source:"@site/talks/2024-11-12/index.mdx",title:"Introducing FastAgency - the fastest way to bring AutoGen workflows to production - Nov 12, 2024",description:"Speakers: Davor Runje",date:"2024-11-12T00:00:00.000Z",formattedDate:"November 12, 2024",tags:[],readingTime:2.02,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Introducing FastAgency - the fastest way to bring AutoGen workflows to production - Nov 12, 2024"},unlisted:!1,prevItem:{title:"Integrating Foundation Models and Symbolic Computing for Next-Generation Robot Planning - Nov 18, 2024",permalink:"/ag2/talks/2024/11/18/index"},nextItem:{title:"Multi-AI Agents for Chip Design with Distilled Knowledge Debugging Graph, Task Graph Solving, and Multi-Modal Capabilities - Nov 11, 2024",permalink:"/ag2/talks/2024/11/11/index"}},c={authorsImageUrls:[]},l=[{value:"Speakers: Davor Runje",id:"speakers-davor-runje",level:3},{value:"Biography of the speakers:",id:"biography-of-the-speakers",level:3},{value:"Abstract:",id:"abstract",level:3}];function d(e){const t={h3:"h3",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"speakers-davor-runje",children:"Speakers: Davor Runje"}),"\n",(0,n.jsx)(t.h3,{id:"biography-of-the-speakers",children:"Biography of the speakers:"}),"\n",(0,n.jsx)(t.p,{children:"Davor Runje is a seasoned software engineer, computer scientist, and serial entrepreneur with a strong background in technology and business. Most recently, he co-founded an AI startup Airt. Prior to that, he co-founded and exited from two companies. Davor is a very active member of open source community. He is a maintainer of FastStream and FastAgency and a core contributor to AutoGen. During his PhD studies, under the mentorship of Dean Rosenzweig from the University of Zagreb and Yuri Gurevich at Microsoft Research, Davor made significant contributions to programming for multiprocessor/multicore systems. He made the design, implementation, and technology transfer of a system that facilitated structured concurrency program execution, which became known as the Task Parallel Library in the .NET framework. This earned him the SSCLI and Phoenix 2005 award from Microsoft Research, recognising it as one of the top 16 international research projects. Davor is also an esteemed academic author with over 20 publications in theoretical computer science and artificial intelligence. He also holds two US patents. Between 2020 and 2024, he served as the president of the board of CISEx, the largest software industry association in Croatia, advocating for legal and tax reforms to enhance the global competitiveness of the Croatian IT sector."}),"\n",(0,n.jsx)(t.h3,{id:"abstract",children:"Abstract:"}),"\n",(0,n.jsx)(t.p,{children:"Inspired by the design and philosophy of modern Python frameworks such as FastAPI, we designed a framework that allows you to go from a working multi-agent prototype written in AutoGen to a scalable, multi-tenant application with SSO authentication hosted on the cloud in less than one hour. Depending on your needs, you can quickly build a REST-based web service running multiple workers or, in the case of an even larger scale, a distributed service built around a message broker protocol. The framework is powerful and uses complex technologies under the hood, yet it is simple to use and it requires only a few lines of code to get the desired results. FastAgency also has a simple-to-use component that allows you to render rich information in UI, giving you a better way to communicate with the end user. Last but not least, FastAgency allows you to import external REST APIs using their OpenAPI specifications and automatically build tools that can be attached to agents in just a few lines of code. In this walk, I'll walk you over the core concepts behind the framework and illustrate them with examples."})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>s,a:()=>i});var n=o(67294);const a={},r=n.createContext(a);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);