"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40583],{50227:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var t=o(85893),i=o(11151);const a={},r="Tool Library",s={id:"topics/captainagent/tool_library",title:"Tool Library",description:"In CaptainAgent, tools are in the form of python functions. The agents can write code to import functions and call them according to their needs. This can significantly enhance the functionality and capabilities of the agents.",source:"@site/docs/topics/captainagent/tool_library.mdx",sourceDirName:"topics/captainagent",slug:"/topics/captainagent/tool_library",permalink:"/ag2/docs/topics/captainagent/tool_library",draft:!1,unlisted:!1,editUrl:"https://github.com/ag2ai/ag2/edit/main/website/docs/topics/captainagent/tool_library.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Details of all the available configurations",permalink:"/ag2/docs/topics/captainagent/configurations"},next:{title:"Compressing Text with LLMLingua",permalink:"/ag2/docs/topics/handling_long_contexts/compressing_text_w_llmligua"}},l={},c=[{value:"Using the Built-in Tool Library",id:"using-the-built-in-tool-library",level:2},{value:"Install dependencies",id:"install-dependencies",level:3},{value:"Subscribe to Certain APIs",id:"subscribe-to-certain-apis",level:3},{value:"What is in the Tool Library",id:"what-is-in-the-tool-library",level:2},{value:"How Tool Library works",id:"how-tool-library-works",level:2},{value:"Note on Adding Customized Tools",id:"note-on-adding-customized-tools",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"tool-library",children:"Tool Library"}),"\n",(0,t.jsx)(n.p,{children:"In CaptainAgent, tools are in the form of python functions. The agents can write code to import functions and call them according to their needs. This can significantly enhance the functionality and capabilities of the agents."}),"\n",(0,t.jsxs)(n.p,{children:["We provide a list of tools that comes with the release of CaptainAgent. Its full content can be found ",(0,t.jsx)(n.a,{href:"https://github.com/ag2ai/ag2/tree/main/autogen/agentchat/contrib/captainagent/tools/README.md",children:"here"})]}),"\n",(0,t.jsx)(n.h2,{id:"using-the-built-in-tool-library",children:"Using the Built-in Tool Library"}),"\n",(0,t.jsx)(n.h3,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,t.jsx)(n.p,{children:"First install the requirements for running the tools via pip."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pip install -r https://raw.githubusercontent.com/ag2ai/ag2/refs/heads/main/autogen/agentchat/contrib/captainagent/tools/requirements.txt\n"})}),"\n",(0,t.jsx)(n.h3,{id:"subscribe-to-certain-apis",children:"Subscribe to Certain APIs"}),"\n",(0,t.jsxs)(n.p,{children:["To use the provided built-in tools, it is required to obtain a Bing Search API key and RapidAPI key.\nFor Bing API, you can read more about how to get an API on the ",(0,t.jsx)(n.a,{href:"https://www.microsoft.com/en-us/bing/apis/bing-web-search-api",children:"Bing Web Search API"})," page.\nFor RapidAPI, you can ",(0,t.jsx)(n.a,{href:"https://rapidapi.com/auth/sign-up",children:"sign up"})," and subscribe to these two links(",(0,t.jsx)(n.a,{href:"https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3",children:"link1"}),", ",(0,t.jsx)(n.a,{href:"https://rapidapi.com/420vijay47/api/youtube-mp3-downloader2",children:"link2"}),").\nThese two apis have free billing options and there is no need to worry about extra costs for small scale runs."]}),"\n",(0,t.jsx)(n.p,{children:"Whenever you run the tool-related code, remember to export the api keys to system variables."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export BING_API_KEY=""\nexport RAPID_API_KEY=""\n'})}),"\n",(0,t.jsx)(n.p,{children:"or"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import os\nos.environ["BING_API_KEY"] = ""\nos.environ["RAPID_API_KEY"] = ""\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then you are good to go. Feel free to try out the examples provided in the CaptainAgent notebook."}),"\n",(0,t.jsx)(n.h2,{id:"what-is-in-the-tool-library",children:"What is in the Tool Library"}),"\n",(0,t.jsx)(n.p,{children:"The tool library consists of three types of tools: math, data_analysis and information_retrieval. Its folder layout is as follows. Each 'py' file implements a tool."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"tools\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 data_analysis\n\u2502   \u251c\u2500\u2500 calculate_correlation.py\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 information_retrieval\n\u2502   \u251c\u2500\u2500 arxiv_download.py\n\u2502   \u251c\u2500\u2500 arxiv_search.py\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 math\n\u2502   \u251c\u2500\u2500 calculate_circle_area_from_diameter.py\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 tool_description.tsv\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Tools can be imported from ",(0,t.jsx)(n.code,{children:"tools/{category}/{tool_name}.py"})," with exactly the same tool name.\n",(0,t.jsx)(n.code,{children:"tool_description.tsv"})," contains descriptions of tools for retrieval."]}),"\n",(0,t.jsx)(n.h2,{id:"how-tool-library-works",children:"How Tool Library works"}),"\n",(0,t.jsxs)(n.p,{children:["When an agent's description is provided, a retriever will retrieve ",(0,t.jsx)(n.code,{children:"top_k"})," tool candidates from the library based on the semantic\nsimilarity between agent description and tool description. The tool description is same as that in ",(0,t.jsx)(n.code,{children:"tool_description.tsv"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["After candidates are retrieved, the agent's system message will be updated with the tool candidates' information and how to call the tools.\nA user proxy with the ability to execute the code will be added to the nested chat. Under the hood, this is achieved by leveraging the\n",(0,t.jsx)(n.a,{href:"/docs/topics/code-execution/user-defined-functions",children:"User Defined Functions"})," feature. A ",(0,t.jsx)(n.code,{children:"LocalCommandLineCodeExecutor"})," equipped with all the functions serves as\ncode executor for the user proxy."]}),"\n",(0,t.jsx)(n.h1,{id:"building-your-own-tool-library",children:"Building your own Tool Library"}),"\n",(0,t.jsxs)(n.p,{children:["Building your own tool library is simple, follow the same directory layout as the one we provided. The python files should be follow the layout ",(0,t.jsx)(n.code,{children:"tools/{category}/{tool_name}.py"}),".\nThe tool you'd like to add should be imported in the following fashion:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from tools.category.tool_name import tool_name\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"tool_description.tsv"})," file should be a tab-separated file with two columns ",(0,t.jsx)(n.code,{children:"docid"})," and ",(0,t.jsx)(n.code,{children:"document_content"}),". The ",(0,t.jsx)(n.code,{children:"document_content"})," should always follow\nthe format ",(0,t.jsx)(n.code,{children:'"category tool_name tool_description"'}),". The category and tool_name should always be one word with no space in between. The document_content is\nused to calculate semantic similarity for retrieval."]}),"\n",(0,t.jsxs)(n.p,{children:["Once your library is ready, specify the path in ",(0,t.jsx)(n.code,{children:"nested_config"})," of CaptainAgent."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'nested_config = {\n    ...\n    "autobuild_tool_config": {\n        "tool_root": "Your tool root here",\n        "retriever": "all-mpnet-base-v2", # This is the default embedding model, you can reove this line if you are not intending to change it\n    },\n    ...\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"By following these steps, you can easily customize the tools library of CaptainAgent and empower your agents with new tools and capabilities."}),"\n",(0,t.jsx)(n.h2,{id:"note-on-adding-customized-tools",children:"Note on Adding Customized Tools"}),"\n",(0,t.jsxs)(n.p,{children:["Due to the implementation of ",(0,t.jsx)(n.a,{href:"/docs/topics/code-execution/user-defined-functions",children:"User Defined Functions"}),", when writing your own tool, you need to write your import statement in the function definition. For example, adding an audio transcription tool:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def audio_transcription(audio_file):\n    import whisper\n    model = whisper.load_model("base")\n    result = model.transcribe(audio_file)\n    return result["text"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["There is also decorator ",(0,t.jsx)(n.code,{children:"with_requirements"})," that may become handy for ",(0,t.jsx)(n.a,{href:"/docs/topics/code-execution/user-defined-functions",children:"adding dependencies"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>r});var t=o(67294);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);