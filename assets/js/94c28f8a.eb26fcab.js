"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31575],{72956:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=t(85893),r=t(11151);const s={title:"Building Swarm-based agents with AG2",authors:["yiranwu","marklysze"],tags:["groupchat","swarm"]},o=void 0,i={permalink:"/ag2/blog/2024/11/17/Swarm",source:"@site/blog/2024-11-17-Swarm/index.mdx",title:"Building Swarm-based agents with AG2",description:"AG2 now provides an implementation of the swarm orchestration from OpenAI's Swarm framework, with some additional features!",date:"2024-11-17T00:00:00.000Z",formattedDate:"November 17, 2024",tags:[{label:"groupchat",permalink:"/ag2/blog/tags/groupchat"},{label:"swarm",permalink:"/ag2/blog/tags/swarm"}],readingTime:6.895,hasTruncateMarker:!1,authors:[{name:"Yiran Wu",title:"PhD student at Pennsylvania State University",url:"https://github.com/yiranwu0",imageURL:"https://github.com/yiranwu0.png",key:"yiranwu"},{name:"Mark Sze",title:"AI Freelancer",url:"https://github.com/marklysze",imageURL:"https://github.com/marklysze.png",key:"marklysze"}],frontMatter:{title:"Building Swarm-based agents with AG2",authors:["yiranwu","marklysze"],tags:["groupchat","swarm"]},unlisted:!1,nextItem:{title:"Introducing CaptainAgent for Adaptive Team Building",permalink:"/ag2/blog/2024/11/15/CaptainAgent"}},l={authorsImageUrls:[void 0,void 0]},c=[{value:"Handoffs",id:"handoffs",level:2},{value:"Creating a swarm",id:"creating-a-swarm",level:2},{value:"Example",id:"example",level:3},{value:"Notes",id:"notes",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["AG2 now provides an implementation of the swarm orchestration from OpenAI's ",(0,a.jsx)(n.a,{href:"https://github.com/openai/swarm",children:"Swarm"})," framework, with some additional features!"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Background"}),": the swarm orchestration is a multi-agent collaboration where agents execute tasks and are responsible for handing them off to other agents."]}),"\n",(0,a.jsx)(n.p,{children:"Here are the key features of the swarm orchestration:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Hand-offs"}),": Agents can transfer control to another agent, enabling smooth and direct transitions within workflows."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Context variables"}),": Agents can dynamically update a shared memory through function calls, maintaining context and adaptability throughout the process."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Besides these core features, AG2 provides:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Simple Interface for Tool Call/Handoff Registration"}),": When creating a swarm agent, you can pass in a list of functions to be registered directly. We also provide a simple method to register handoffs."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Transition Beyond Tool Calls"}),": We enable the ability to automatically transfer to a nominated swarm agent when an agent has completed their task. We will extend this to allow other transitions in the future (e.g., use a function to determine the next agent )."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Built-in human-in-the-loop"}),": Adding a user agent (UserProxyAgent) to your swarm will allow swarm agents to transition back to the user. Provides a means to clarify and confirm with the user without breaking out of the swarm."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"handoffs",children:"Handoffs"}),"\n",(0,a.jsx)(n.p,{children:"Before we dive into a swarm example, an important concept in swarm orchestration is when and how an agent hands off to another agent."}),"\n",(0,a.jsx)(n.p,{children:"Providing additional flexibility, we introduce the capability to define an after-work handoff. Think of it as the agent's next action after completing their task. It can be to hand off to another agent, revert to the user, stay with the agent for another iteration, or terminate the conversation."}),"\n",(0,a.jsx)(n.p,{children:"The following are the prioritized handoffs for each iteration of the swarm."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Agent-level: Calls a tool that returns a swarm agent"}),": A swarm agent's tool call returns the next agent to hand off to."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Agent-level: Calls a pre-defined conditional handoff"}),": A swarm agent has an ",(0,a.jsx)(n.code,{children:"ON_CONDITION"})," handoff that is chosen by the LLM (behaves like a tool call)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Agent-level: After work hand off"}),": When no tool calls are made it can use an, optional, ",(0,a.jsx)(n.code,{children:"AFTER_WORK"})," handoff that is a preset option or a nominated swarm agent."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Swarm-level: After work handoff"}),": If the agent does not have an ",(0,a.jsx)(n.code,{children:"AFTER_WORK"})," handoff, the swarm's ",(0,a.jsx)(n.code,{children:"AFTER_WORK"})," handoff will be used."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["In the following code sample a ",(0,a.jsx)(n.code,{children:"SwarmAgent"})," named ",(0,a.jsx)(n.code,{children:"responder"})," has:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Two conditional handoffs registered (",(0,a.jsx)(n.code,{children:"ON_CONDITION"}),"), specifying the agent to hand off to and the condition to trigger the handoff."]}),"\n",(0,a.jsxs)(n.li,{children:["An after-work handoff (",(0,a.jsx)(n.code,{children:"AFTER_WORK"}),") nominated using one of the preset options (",(0,a.jsx)(n.code,{children:"TERMINATE"}),", ",(0,a.jsx)(n.code,{children:"REVERT_TO_USER"}),", ",(0,a.jsx)(n.code,{children:"STAY"}),"). This could also be a swarm agent."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'responder.register_hand_off(\n    hand_to=[\n ON_CONDITION(weather, "If you need weather data, hand off to the Weather_Agent"),\n ON_CONDITION(travel_advisor, "If you have weather data but need formatted recommendations, hand off to the Travel_Advisor_Agent"),\n AFTER_WORK(AfterWorkOption.REVERT_TO_USER),\n ]\n)\n'})}),"\n",(0,a.jsx)(n.p,{children:"You can specify the swarm-level after work handoff when initiating the swarm (here we nominate to terminate):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"history, context, last_agent = initiate_swarm_chat(\n    initial_agent=responder,\n    agents=my_list_of_swarm_agents,\n    max_rounds=30,\n    messages=messages,\n    after_work=AFTER_WORK(AfterWorkOption.TERMINATE)\n)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-swarm",children:"Creating a swarm"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Define the functions that can be used by your ",(0,a.jsx)(n.code,{children:"SwarmAgent"}),"s."]}),"\n",(0,a.jsxs)(n.li,{children:["Create your ",(0,a.jsx)(n.code,{children:"SwarmAgent"}),"s (which derives from ",(0,a.jsx)(n.code,{children:"ConversableAgent"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["For each swarm agent, specify the handoffs (transitions to another agent) and what to do when they have finished their work (termed ",(0,a.jsx)(n.em,{children:"After Work"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"Optionally, create your context dictionary."}),"\n",(0,a.jsxs)(n.li,{children:["Call ",(0,a.jsx)(n.code,{children:"initiate_swarm_chat"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"This example of managing refunds demonstrates the context handling, swarm and agent-level conditional and after work hand offs, and the human-in-the-loop feature."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from autogen import initiate_swarm_chat, SwarmAgent, SwarmResult, ON_CONDITION, AFTER_WORK, AfterWorkOption\nfrom autogen import UserProxyAgent\nimport os\n\n# All our swarm agents will use GPT-4o-mini from OpenAI\nllm_config = {...}\n\n# We configure our starting context dictionary\ncontext_variables = {\n    "passport_number": "",\n    "customer_verified": False,\n    "refund_approved": False,\n    "payment_processed": False\n}\n\n# Functions that our swarm agents will be assigned\n# They can return a SwarmResult, a SwarmAgent, or a string\n# SwarmResult allows you to update context_variables and/or hand off to another agent\ndef verify_customer_identity(passport_number: str, context_variables: dict) -> str:\n    context_variables["passport_number"] = passport_number\n    context_variables["customer_verified"] = True\n    return SwarmResult(values="Customer identity verified", context_variables=context_variables)\n\ndef approve_refund_and_transfer(context_variables: dict) -> str:\n    context_variables["refund_approved"] = True\n    return SwarmResult(values="Refund approved", context_variables=context_variables, agent=payment_processor)\n\ndef process_refund_payment(context_variables: dict) -> str:\n    context_variables["payment_processed"] = True\n    return SwarmResult(values="Payment processed successfully", context_variables=context_variables)\n\n# Swarm Agents, similar to ConversableAgent, but with functions and hand offs (specified later)\ncustomer_service = SwarmAgent(\n    name="CustomerServiceRep",\n    system_message="""You are a customer service representative.\n      First verify the customer\'s identity by asking for the customer\'s passport number,\n      then calling the verify_customer_identity function,\n      finally, transfer the case to the refund specialist.""",\n    llm_config=llm_config,\n    functions=[verify_customer_identity],\n)\n\nrefund_specialist = SwarmAgent(\n    name="RefundSpecialist",\n    system_message="""You are a refund specialist.\n    Review the case and approve the refund, then transfer to the payment processor.""",\n    llm_config=llm_config,\n    functions=[approve_refund_and_transfer],\n)\n\npayment_processor = SwarmAgent(\n    name="PaymentProcessor",\n    system_message="""You are a payment processor.\n    Process the refund payment and provide a confirmation message to the customer.""",\n    llm_config=llm_config,\n    functions=[process_refund_payment],\n)\n\nsatisfaction_surveyor = SwarmAgent(\n    name="SatisfactionSurveyor",\n    system_message="""You are a customer satisfaction specialist.\n    Ask the customer to rate their experience with the refund process.""",\n    llm_config=llm_config,\n)\n\n# Conditional and After work hand offs\n\ncustomer_service.register_hand_off(\n    hand_to=[\n        ON_CONDITION(refund_specialist, "After customer verification, transfer to refund specialist"),\n        AFTER_WORK(AfterWorkOption.REVERT_TO_USER)\n    ]\n)\n\npayment_processor.register_hand_off(\n    hand_to=[\n        AFTER_WORK(satisfaction_surveyor),\n    ]\n)\n\n# Our human, you, allowing swarm agents to revert back for more information\nuser = UserProxyAgent(name="User", code_execution_config=False)\n\n# Initiate the swarm\n# Returns the ChatResult, final context, and last speaker\n\nchat_result, context_variables, last_speaker = initiate_swarm_chat(\n    initial_agent=customer_service, # Starting agent\n    agents=[customer_service, refund_specialist, payment_processor, satisfaction_surveyor],\n    user_agent=user, # Human user\n    messages="Customer requesting refund for order #12345",\n    context_variables=context_variables, # Context\n    after_work=AFTER_WORK(AfterWorkOption.TERMINATE) # Swarm-level after work hand off\n)\n\n\nprint(f"Context Variables:\\n{json.dumps(context_variables, indent=2)}")\n'})}),"\n",(0,a.jsx)(n.p,{children:"And here's the output, showing the flow of agents."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'User (to chat_manager):\n\nCustomer requesting refund for order #12345\n\n--------------------------------------------------------------------------------\n\nNext speaker: CustomerServiceRep\n\nCustomerServiceRep (to chat_manager):\n\nTo assist you with the refund for order #12345,\nI need to verify your identity.\nCould you please provide your passport number?\n\n--------------------------------------------------------------------------------\n\nNext speaker: User\n\nReplying as User. Provide feedback to chat_manager.\nPress enter to skip and use auto-reply,\nor type \'exit\' to end the conversation: AUS923828C\n\nUser (to chat_manager):\n\nAUS923828C\n\n--------------------------------------------------------------------------------\n\nNext speaker: CustomerServiceRep\n\nCustomerServiceRep (to chat_manager):\n\n***** Suggested tool call (call_wfx2VoCmuCKDFKV5xcmB6kSc): verify_customer_identity *****\nArguments:\n{"passport_number":"AUS923828C"}\n*****************************************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: Tool_Execution\n\n\n>>>>>>>> EXECUTING FUNCTION verify_customer_identity...\nTool_Execution (to chat_manager):\n\n***** Response from calling tool (call_wfx2VoCmuCKDFKV5xcmB6kSc) *****\nCustomer identity verified\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: CustomerServiceRep\n\nCustomerServiceRep (to chat_manager):\n\n***** Suggested tool call (call_Jz1viRLeJuOltPRcKfYZ8bgH): transfer_to_RefundSpecialist *****\nArguments:\n{}\n*********************************************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: Tool_Execution\n\n\n>>>>>>>> EXECUTING FUNCTION transfer_to_RefundSpecialist...\nTool_Execution (to chat_manager):\n\n***** Response from calling tool (call_Jz1viRLeJuOltPRcKfYZ8bgH) *****\nSwarmAgent --\x3e RefundSpecialist\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: RefundSpecialist\n\nRefundSpecialist (to chat_manager):\n\n***** Suggested tool call (call_c4uhy8Mi3Ihe3tVRFVG9M8Uw): approve_refund_and_transfer *****\nArguments:\n{}\n********************************************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: Tool_Execution\n\n\n>>>>>>>> EXECUTING FUNCTION approve_refund_and_transfer...\nTool_Execution (to chat_manager):\n\n***** Response from calling tool (call_c4uhy8Mi3Ihe3tVRFVG9M8Uw) *****\nRefund approved\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: PaymentProcessor\n\nPaymentProcessor (to chat_manager):\n\n***** Suggested tool call (call_qrs5ysx89rQqMFtVuqMUb9O0): process_refund_payment *****\nArguments:\n{}\n***************************************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: Tool_Execution\n\n\n>>>>>>>> EXECUTING FUNCTION process_refund_payment...\nTool_Execution (to chat_manager):\n\n***** Response from calling tool (call_qrs5ysx89rQqMFtVuqMUb9O0) *****\nPayment processed successfully\n**********************************************************************\n\n--------------------------------------------------------------------------------\n\nNext speaker: PaymentProcessor\n\nPaymentProcessor (to chat_manager):\n\nYour refund for order #12345 has been processed successfully.\nYou should see the amount credited back to your account shortly.\nIf you have any further questions or need assistance, feel free to reach out.\nThank you for your patience!\n\n--------------------------------------------------------------------------------\n\nNext speaker: SatisfactionSurveyor\n\nSatisfactionSurveyor (to chat_manager):\n\nThank you for your patience during the refund process!\nWe hope you are satisfied with your experience.\nCould you please rate your satisfaction with the refund process from 1 to 5,\nwhere 1 is very dissatisfied and 5 is very satisfied?\nYour feedback is valuable to us!\n\n--------------------------------------------------------------------------------\nContext Variables:\n{\n  "customer_verified": true,\n  "refund_approved": true,\n  "payment_processed": true,\n  "passport_number": "AUS923828C"\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Behind-the-scenes, swarm agents are supported by a tool execution agent, that executes tools on their behalf. Hence, the appearance of ",(0,a.jsx)(n.code,{children:"Tool Execution"})," in the output."]}),"\n",(0,a.jsx)(n.li,{children:'Currently only swarm agents can be added to a swarm. This is to maintain their ability to manage context variables, auto-execute functions, and support hand offs. Eventually, we may allow ConversableAgent to have the same capability and make "SwarmAgent" a simpler subclass with certain defaults changed (like AssistantAgent and UserProxyAgent).'}),"\n",(0,a.jsxs)(n.li,{children:["Would you like to enhance the swarm feature or have found a bug? Please let us know by creating an issue on the ",(0,a.jsx)(n.a,{href:"https://github.com/ag2ai/ag2/issues",children:"AG2 GitHub"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var a=t(67294);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);